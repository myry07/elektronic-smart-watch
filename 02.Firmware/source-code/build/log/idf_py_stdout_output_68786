[1/11] Performing build step for 'bootloader'
[1/1] cd /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/bootloader/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/bootloader/bootloader.bin
Bootloader binary size 0x5220 bytes. 0x2de0 bytes (36%) free.
[2/11] No install step for 'bootloader'
[3/11] Completed 'bootloader'
[4/11] Building C object esp-idf/lvgl_port/CMakeFiles/__idf_lvgl_port.dir/ui_page_lock.c.obj
[5/11] Building C object esp-idf/lvgl_port/CMakeFiles/__idf_lvgl_port.dir/ui_page_home.c.obj
[6/11] Linking C static library esp-idf/lvgl_port/liblvgl_port.a
[7/11] Generating ld/sections.ld
[8/11] Linking CXX executable camera-code.elf
[9/11] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/camera-code.bin
[10/11] cd /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/partition_table/partition-table.bin /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/camera-code.bin
camera-code.bin binary size 0x15af60 bytes. Smallest app partition is 0x3c0000 bytes. 0x2650a0 bytes (64%) free.
[10/11] cd /Users/wangjiaqi/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/wangjiaqi/esp/esp-idf -D "SERIAL_TOOL=/Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python;;/Users/wangjiaqi/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build -P /Users/wangjiaqi/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbmodem101 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 16MB 0x0 bootloader/bootloader.bin 0x10000 camera-code.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.usbmodem101
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: b4:3a:45:a4:0d:00
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0016afff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21024 bytes to 13390...
Writing at 0x00000000... (100 %)
Wrote 21024 bytes (13390 compressed) at 0x00000000 in 0.2 seconds (effective 754.3 kbit/s)...
Hash of data verified.
Compressed 1421152 bytes to 623254...
Writing at 0x00010000... (2 %)
Writing at 0x0001c15e... (5 %)
Writing at 0x00027ab7... (7 %)
Writing at 0x00031c2a... (10 %)
Writing at 0x0003ad9e... (12 %)
Writing at 0x000471b3... (15 %)
Writing at 0x00054ba5... (17 %)
Writing at 0x0006056c... (20 %)
Writing at 0x0006d6e4... (23 %)
Writing at 0x00079542... (25 %)
Writing at 0x000840af... (28 %)
Writing at 0x0008f1f3... (30 %)
Writing at 0x00098f94... (33 %)
Writing at 0x000a1982... (35 %)
Writing at 0x000aafec... (38 %)
Writing at 0x000b4744... (41 %)
Writing at 0x000c3d88... (43 %)
Writing at 0x000cf2ff... (46 %)
Writing at 0x000dc724... (48 %)
Writing at 0x000e9566... (51 %)
Writing at 0x000f32de... (53 %)
Writing at 0x00102013... (56 %)
Writing at 0x0010849b... (58 %)
Writing at 0x0010e944... (61 %)
Writing at 0x00114f85... (64 %)
Writing at 0x0011b391... (66 %)
Writing at 0x001216a5... (69 %)
Writing at 0x00127084... (71 %)
Writing at 0x0012d0e4... (74 %)
Writing at 0x00132d50... (76 %)
Writing at 0x00138b3b... (79 %)
Writing at 0x0013e4aa... (82 %)
Writing at 0x001442ab... (84 %)
Writing at 0x00149d27... (87 %)
Writing at 0x0014ffac... (89 %)
Writing at 0x00155b53... (92 %)
Writing at 0x0015d755... (94 %)
Writing at 0x001646cd... (97 %)
Writing at 0x0016abf5... (100 %)
Wrote 1421152 bytes (623254 compressed) at 0x00010000 in 6.9 seconds (effective 1638.2 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 120...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (120 compressed) at 0x00008000 in 0.0 seconds (effective 599.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
