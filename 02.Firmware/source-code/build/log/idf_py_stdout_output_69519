[1/11] Performing build step for 'bootloader'
[1/1] cd /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/bootloader/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/bootloader/bootloader.bin
Bootloader binary size 0x5220 bytes. 0x2de0 bytes (36%) free.
[2/11] No install step for 'bootloader'
[3/11] Completed 'bootloader'
[4/11] Building C object esp-idf/lvgl_port/CMakeFiles/__idf_lvgl_port.dir/ui_page_p2.c.obj
[5/11] Building C object esp-idf/lvgl_port/CMakeFiles/__idf_lvgl_port.dir/ui_page_p1.c.obj
[6/11] Linking C static library esp-idf/lvgl_port/liblvgl_port.a
[7/11] Generating ld/sections.ld
[8/11] Linking CXX executable camera-code.elf
[9/11] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/camera-code.bin
[10/11] cd /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/partition_table/partition-table.bin /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/camera-code.bin
camera-code.bin binary size 0x15af70 bytes. Smallest app partition is 0x3c0000 bytes. 0x265090 bytes (64%) free.
[10/11] cd /Users/wangjiaqi/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/wangjiaqi/esp/esp-idf -D "SERIAL_TOOL=/Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python;;/Users/wangjiaqi/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build -P /Users/wangjiaqi/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbmodem1101 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 16MB 0x0 bootloader/bootloader.bin 0x10000 camera-code.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.usbmodem1101
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: b4:3a:45:a4:0d:00
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0016afff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21024 bytes to 13390...
Writing at 0x00000000... (100 %)
Wrote 21024 bytes (13390 compressed) at 0x00000000 in 0.2 seconds (effective 757.6 kbit/s)...
Hash of data verified.
Compressed 1421168 bytes to 623263...
Writing at 0x00010000... (2 %)
Writing at 0x0001c165... (5 %)
Writing at 0x00027abd... (7 %)
Writing at 0x00031c2d... (10 %)
Writing at 0x0003ada7... (12 %)
Writing at 0x000471b8... (15 %)
Writing at 0x00054bab... (17 %)
Writing at 0x00060577... (20 %)
Writing at 0x0006d6eb... (23 %)
Writing at 0x0007954c... (25 %)
Writing at 0x000840b7... (28 %)
Writing at 0x0008f1f4... (30 %)
Writing at 0x00098f9a... (33 %)
Writing at 0x000a1983... (35 %)
Writing at 0x000aafef... (38 %)
Writing at 0x000b4745... (41 %)
Writing at 0x000c3d70... (43 %)
Writing at 0x000cf305... (46 %)
Writing at 0x000dc72e... (48 %)
Writing at 0x000e9566... (51 %)
Writing at 0x000f32df... (53 %)
Writing at 0x0010202d... (56 %)
Writing at 0x001084af... (58 %)
Writing at 0x0010e94f... (61 %)
Writing at 0x00114f95... (64 %)
Writing at 0x0011b3b4... (66 %)
Writing at 0x001216c0... (69 %)
Writing at 0x0012709a... (71 %)
Writing at 0x0012d0f3... (74 %)
Writing at 0x00132d66... (76 %)
Writing at 0x00138b4f... (79 %)
Writing at 0x0013e4c8... (82 %)
Writing at 0x001442c6... (84 %)
Writing at 0x00149d36... (87 %)
Writing at 0x0014ffb5... (89 %)
Writing at 0x00155b55... (92 %)
Writing at 0x0015d75a... (94 %)
Writing at 0x001646d1... (97 %)
Writing at 0x0016abfb... (100 %)
Wrote 1421168 bytes (623263 compressed) at 0x00010000 in 7.0 seconds (effective 1635.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 120...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (120 compressed) at 0x00008000 in 0.0 seconds (effective 594.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
