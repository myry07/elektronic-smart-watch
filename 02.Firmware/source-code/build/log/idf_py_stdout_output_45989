[1/11] Performing build step for 'bootloader'
[1/1] cd /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/bootloader/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/bootloader/bootloader.bin
Bootloader binary size 0x5220 bytes. 0x2de0 bytes (36%) free.
[2/11] No install step for 'bootloader'
[3/11] Completed 'bootloader'
[4/11] Building C object esp-idf/lvgl_port/CMakeFiles/__idf_lvgl_port.dir/ui_page_lock.c.obj
[5/11] Building C object esp-idf/lvgl_port/CMakeFiles/__idf_lvgl_port.dir/ui_page_home.c.obj
[6/11] Linking C static library esp-idf/lvgl_port/liblvgl_port.a
[7/11] Generating ld/sections.ld
[8/11] Linking CXX executable camera-code.elf
[9/11] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/camera-code.bin
[10/11] cd /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/partition_table/partition-table.bin /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/camera-code.bin
camera-code.bin binary size 0xf4c80 bytes. Smallest app partition is 0x3c0000 bytes. 0x2cb380 bytes (75%) free.
[10/11] cd /Users/wangjiaqi/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/wangjiaqi/esp/esp-idf -D "SERIAL_TOOL=/Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python;;/Users/wangjiaqi/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build -P /Users/wangjiaqi/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbmodem1101 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 16MB 0x0 bootloader/bootloader.bin 0x10000 camera-code.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.usbmodem1101
Connecting...
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: b4:3a:45:a4:0d:00
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x00104fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21024 bytes to 13390...
Writing at 0x00000000... (100 %)
Wrote 21024 bytes (13390 compressed) at 0x00000000 in 0.2 seconds (effective 754.4 kbit/s)...
Hash of data verified.
Compressed 1002624 bytes to 478063...
Writing at 0x00010000... (3 %)
Writing at 0x0001bb99... (6 %)
Writing at 0x00027213... (10 %)
Writing at 0x00030f2a... (13 %)
Writing at 0x00039ea6... (16 %)
Writing at 0x0004314c... (20 %)
Writing at 0x0004c6bf... (23 %)
Writing at 0x0005ad2d... (26 %)
Writing at 0x00066a31... (30 %)
Writing at 0x00073cff... (33 %)
Writing at 0x0008208e... (36 %)
Writing at 0x0008af65... (40 %)
Writing at 0x00099227... (43 %)
Writing at 0x000a1567... (46 %)
Writing at 0x000a77fa... (50 %)
Writing at 0x000ad983... (53 %)
Writing at 0x000b3aeb... (56 %)
Writing at 0x000b9581... (60 %)
Writing at 0x000bf722... (63 %)
Writing at 0x000c50b8... (66 %)
Writing at 0x000cb06d... (70 %)
Writing at 0x000d0d3d... (73 %)
Writing at 0x000d6846... (76 %)
Writing at 0x000dc4e5... (80 %)
Writing at 0x000e24e4... (83 %)
Writing at 0x000e85a4... (86 %)
Writing at 0x000f060e... (90 %)
Writing at 0x000f705d... (93 %)
Writing at 0x000fcd88... (96 %)
Writing at 0x00103686... (100 %)
Wrote 1002624 bytes (478063 compressed) at 0x00010000 in 5.1 seconds (effective 1569.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 120...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (120 compressed) at 0x00008000 in 0.0 seconds (effective 586.3 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
