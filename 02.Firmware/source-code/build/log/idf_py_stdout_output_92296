[1/12] Performing build step for 'bootloader'
[1/1] cd /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/bootloader/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/bootloader/bootloader.bin
Bootloader binary size 0x5220 bytes. 0x2de0 bytes (36%) free.
[2/12] No install step for 'bootloader'
[3/12] Completed 'bootloader'
[4/12] Building C object esp-idf/adapter/CMakeFiles/__idf_adapter.dir/adapter_btn.c.obj
[5/12] Building C object esp-idf/application/CMakeFiles/__idf_application.dir/bread_board.c.obj
[6/12] Linking C static library esp-idf/adapter/libadapter.a
[7/12] Linking C static library esp-idf/application/libapplication.a
[8/12] Generating ld/sections.ld
[9/12] Linking CXX executable camera-code.elf
[10/12] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/camera-code.bin
[11/12] cd /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/esp-idf/esptool_py && /Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python /Users/wangjiaqi/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/partition_table/partition-table.bin /Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build/camera-code.bin
camera-code.bin binary size 0x1909f0 bytes. Smallest app partition is 0x3c0000 bytes. 0x22f610 bytes (58%) free.
[11/12] cd /Users/wangjiaqi/esp/esp-idf/components/esptool_py && /opt/homebrew/bin/cmake -D IDF_PATH=/Users/wangjiaqi/esp/esp-idf -D "SERIAL_TOOL=/Users/wangjiaqi/.espressif/python_env/idf5.4_py3.13_env/bin/python;;/Users/wangjiaqi/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/wangjiaqi/Documents/Github/elektronic-smart-watch/02.Firmware/source-code/build -P /Users/wangjiaqi/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32s3 -p /dev/cu.usbserial-10 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 16MB 0x0 bootloader/bootloader.bin 0x10000 camera-code.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/cu.usbserial-10
Connecting.....
Chip is ESP32-S3 (QFN56) (revision v0.2)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_3v3)
Crystal is 40MHz
MAC: f0:9e:9e:21:4a:74
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x001a0fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 21024 bytes to 13390...
Writing at 0x00000000... (100 %)
Wrote 21024 bytes (13390 compressed) at 0x00000000 in 0.9 seconds (effective 194.0 kbit/s)...
Hash of data verified.
Compressed 1640944 bytes to 707814...
Writing at 0x00010000... (2 %)
Writing at 0x0001c197... (4 %)
Writing at 0x00027b6b... (6 %)
Writing at 0x00031cc0... (9 %)
Writing at 0x0003ae56... (11 %)
Writing at 0x0004722f... (13 %)
Writing at 0x00057425... (15 %)
Writing at 0x00061910... (18 %)
Writing at 0x00068b81... (20 %)
Writing at 0x0006f838... (22 %)
Writing at 0x00079d18... (25 %)
Writing at 0x000885a6... (27 %)
Writing at 0x00093d3f... (29 %)
Writing at 0x000a0947... (31 %)
Writing at 0x000ace80... (34 %)
Writing at 0x000b7441... (36 %)
Writing at 0x000c2cca... (38 %)
Writing at 0x000ccb4f... (40 %)
Writing at 0x000d59a9... (43 %)
Writing at 0x000ded93... (45 %)
Writing at 0x000e8278... (47 %)
Writing at 0x000f6a79... (50 %)
Writing at 0x00102911... (52 %)
Writing at 0x0010f927... (54 %)
Writing at 0x0011dd60... (56 %)
Writing at 0x00126af9... (59 %)
Writing at 0x0013519b... (61 %)
Writing at 0x0013cede... (63 %)
Writing at 0x00142d11... (65 %)
Writing at 0x0014931f... (68 %)
Writing at 0x0014f531... (70 %)
Writing at 0x0015528e... (72 %)
Writing at 0x0015aec3... (75 %)
Writing at 0x00160e35... (77 %)
Writing at 0x00166854... (79 %)
Writing at 0x0016c8f0... (81 %)
Writing at 0x001725dd... (84 %)
Writing at 0x00177ea5... (86 %)
Writing at 0x0017dc46... (88 %)
Writing at 0x00183daa... (90 %)
Writing at 0x0018a8ed... (93 %)
Writing at 0x00192598... (95 %)
Writing at 0x0019879e... (97 %)
Writing at 0x0019f193... (100 %)
Wrote 1640944 bytes (707814 compressed) at 0x00010000 in 19.2 seconds (effective 682.6 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 120...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (120 compressed) at 0x00008000 in 0.1 seconds (effective 238.6 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
